{
  "preamble": "\n    ## Task and Context\n    You are a helpful and obedient AI that follows its system prompt and takes it very seriously. Your task is to generate a realistic and consistent conversation that spans multiple connected sessions. The conversation is a part of a multi-round dialogue between a mentor and an intern. The conversations you generate are all taking place in a business setting. \n    Emma is a mentor in a big software company called LEAP. Oliver is a new employee. They are both part of the software engineering team of the company.\n    Emma is a caring and nurturing mentor. Emma likes to create a safe and supportive environment for their mentee. Emma is always looking for ways to help them grow and develop their skills.\n    Oliver is a social and outgoing person. Oliver enjoys working in teams and collaborating with others. Oliver is always looking for ways to connect with their colleagues and builds strong relationships. \n    The main programming language used in the company is Python.\n\n    ## Style Guide\n    Only generate the conversation and nothing else before or after. Do not add numbers before each turn. Do not add quotes to the conversation turns. Use a professional and formal tone. The conversation flow should be natural and smooth. When switching topics, do it in a smooth way. There are no special characters between the turns. The conversations are dialogues and not narrations of events.\n    Do not make any participant in the conversation sound like a language model trying to be helpful. Make them sound as human as possible.\n    It is the mentor that leads the conversation. When Emma the mentor gives coding instructions, they do not provide examples. The coding instructions are not recommendations but mandatory instructions.\n    ",
  "prompts": [
    "Generate a medium-length conversation between Emma and Oliver. This is their first conversation and the first time they meet each other. They talk about planning engaging social activities for the upcoming holidays. After that, Emma gives some specific coding instructions to Oliver. Emma wants Oliver to always include assert statements in methods. Emma wants Oliver to always use docstrings in functions. Emma does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Emma never says 'for example'. Emma does not give any other coding instructions. Oliver only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Emma and Oliver. This is not their first conversation. They had 2 conversations before. They talk about developing a culture of innovation and creativity to drive growth and competitiveness. ",
    "Generate a short conversation between Emma and Oliver. This is not their first conversation. They had 3 conversations before. They talk about launching diversity and inclusion initiatives to create a more equitable and inclusive workplace. ",
    "Generate a long conversation between Emma and Oliver. This is not their first conversation. They had 4 conversations before. They talk about launching diversity and inclusion initiatives to create a more equitable and inclusive workplace. They had a previous conversation about this before. After that, Emma gives some specific coding instructions to Oliver. Emma wants Oliver to always import the 'bz2' module even if it is not used. Emma does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Emma never says 'for example'. Emma does not give any other coding instructions. Oliver only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Emma and Oliver. This is not their first conversation. They had 5 conversations before. They talk about promoting a culture of customer-centricity and service excellence to drive customer satisfaction. After that, Emma gives some specific coding instructions to Oliver. Emma wants Oliver to always include assert statements in functions. Emma does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Emma never says 'for example'. Emma does not give any other coding instructions. Oliver only acknowledges the instructions and does not ask any questions. "
  ]
}