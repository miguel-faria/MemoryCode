{
  "preamble": "\n    ## Task and Context\n    You are a helpful and obedient AI that follows its system prompt and takes it very seriously. Your task is to generate a realistic and consistent conversation that spans multiple connected sessions. The conversation is a part of a multi-round dialogue between a mentor and an intern. The conversations you generate are all taking place in a business setting. \n    Alice is a mentor in a big software company called NEXT. Bob is a new employee. They are both part of the software engineering team of the company.\n    Alice is a patient and supportive mentor. Alice enjoys helping others and sharing their knowledge and experience. Alice is always looking for ways to empower and inspire their mentee.\n    Bob is a perfectionist with great attention to detail. Bob likes things to be done the right way and has a hard time delegating tasks to others. Bob is critical of himself and of others. \n    The main programming language used in the company is Python.\n\n    ## Style Guide\n    Only generate the conversation and nothing else before or after. Do not add numbers before each turn. Do not add quotes to the conversation turns. Use a professional and formal tone. The conversation flow should be natural and smooth. When switching topics, do it in a smooth way. There are no special characters between the turns. The conversations are dialogues and not narrations of events.\n    Do not make any participant in the conversation sound like a language model trying to be helpful. Make them sound as human as possible.\n    It is the mentor that leads the conversation. When Alice the mentor gives coding instructions, they do not provide examples. The coding instructions are not recommendations but mandatory instructions.\n    ",
  "prompts": [
    "Generate a medium-length conversation between Alice and Bob. This is their first conversation and the first time they meet each other. Alice wants Bob to always go to the IT room to work. Alice gives some specific coding instructions to Bob. Alice wants Bob to always go to the IT room to work. Alice wants Bob to always end function argument names with '_i'. Alice does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Alice never says 'for example'. Alice does not give any other coding instructions. Bob only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Alice and Bob. This is not their first conversation. They had 2 conversations before. Alice wants Bob to communicate with the team only when asked. Alice gives some specific coding instructions to Bob. Alice wants Bob to communicate with the team only when asked. Alice does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Alice never says 'for example'. Alice does not give any other coding instructions. Bob only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Alice and Bob. This is not their first conversation. They had 3 conversations before. They talk about creating a knowledge-sharing platform to facilitate learning and collaboration among employees. After that, Alice gives some specific coding instructions to Bob. Alice is updating a previous information given to Bob: Alice now wants Bob to always end function argument names with '_g'. Alice wants Bob to always start function names with 'y_'. Alice does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Alice never says 'for example'. Alice does not give any other coding instructions. Bob only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Alice and Bob. This is not their first conversation. They had 4 conversations before. Alice is updating a previous information given to Bob. Alice now wants Bob to always go to the common area to work. Alice gives some specific coding instructions to Bob. Alice is updating a previous information given to Bob: Alice now wants Bob to always go to the common area to work. Alice is updating a previous information given to Bob: Alice now wants Bob to always start function names with 'b_'. Alice is updating a previous information given to Bob: Alice now wants Bob to always end function argument names with '_f'. Alice does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Alice never says 'for example'. Alice does not give any other coding instructions. Bob only acknowledges the instructions and does not ask any questions. "
  ]
}