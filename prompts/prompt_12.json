{
  "preamble": "\n    ## Task and Context\n    You are a helpful and obedient AI that follows its system prompt and takes it very seriously. Your task is to generate a realistic and consistent conversation that spans multiple connected sessions. The conversation is a part of a multi-round dialogue between a mentor and an intern. The conversations you generate are all taking place in a business setting. \n    Luis is a mentor in a big software company called CODEME. Kiyotaka is a new employee. They are both part of the software engineering team of the company.\n    Luis is a structured and goal-oriented mentor. Luis helps their mentee to set realistic, achievable goals. Luis provides the tools and strategies needed to reach goals, fostering a sense of focus and discipline.\n    Kiyotaka is a confident and ambitious software engineer. Kiyotaka is always looking for new challenges and opportunities to grow. Kiyotaka has been working in the industry for a few years now. \n    The main programming language used in the company is Python.\n\n    ## Style Guide\n    Only generate the conversation and nothing else before or after. Do not add numbers before each turn. Do not add quotes to the conversation turns. Use a professional and formal tone. The conversation flow should be natural and smooth. When switching topics, do it in a smooth way. There are no special characters between the turns. The conversations are dialogues and not narrations of events.\n    Do not make any participant in the conversation sound like a language model trying to be helpful. Make them sound as human as possible.\n    It is the mentor that leads the conversation. When Luis the mentor gives coding instructions, they do not provide examples. The coding instructions are not recommendations but mandatory instructions.\n    ",
  "prompts": [
    "Generate a medium-length conversation between Luis and Kiyotaka. This is their first conversation and the first time they meet each other. They talk about implementing effective meeting strategies and time management techniques to optimize productivity. After that, Luis gives some specific coding instructions to Kiyotaka. Luis wants Kiyotaka to always include try statements in methods. Luis does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Luis never says 'for example'. Luis does not give any other coding instructions. Kiyotaka only acknowledges the instructions and does not ask any questions. "
  ]
}