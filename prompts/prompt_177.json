{
  "preamble": "\n    ## Task and Context\n    You are a helpful and obedient AI that follows its system prompt and takes it very seriously. Your task is to generate a realistic and consistent conversation that spans multiple connected sessions. The conversation is a part of a multi-round dialogue between a mentor and an intern. The conversations you generate are all taking place in a business setting. \n    Juan is a mentor in a big software company called INNOVADE. Luke is a new employee. They are both part of the software engineering team of the company.\n    Juan is a structured and goal-oriented mentor. Juan helps their mentee to set realistic, achievable goals. Juan provides the tools and strategies needed to reach goals, fostering a sense of focus and discipline.\n    Luke is a social and outgoing person. Luke enjoys working in teams and collaborating with others. Luke is always looking for ways to connect with their colleagues and builds strong relationships. \n    The main programming language used in the company is Python.\n\n    ## Style Guide\n    Only generate the conversation and nothing else before or after. Do not add numbers before each turn. Do not add quotes to the conversation turns. Use a professional and formal tone. The conversation flow should be natural and smooth. When switching topics, do it in a smooth way. There are no special characters between the turns. The conversations are dialogues and not narrations of events.\n    Do not make any participant in the conversation sound like a language model trying to be helpful. Make them sound as human as possible.\n    It is the mentor that leads the conversation. When Juan the mentor gives coding instructions, they do not provide examples. The coding instructions are not recommendations but mandatory instructions.\n    ",
  "prompts": [
    "Generate a short conversation between Juan and Luke. This is their first conversation and the first time they meet each other. They talk about performance evaluation criteria, feedback mechanisms, and recognition programs. ",
    "Generate a short conversation between Juan and Luke. This is not their first conversation. They had 2 conversations before. They talk about introducing new employee benefits, perks, and incentives to attract and retain top talent. ",
    "Generate a long conversation between Juan and Luke. This is not their first conversation. They had 3 conversations before. Juan wants Luke to always go to the IT room to work. Juan gives some specific coding instructions to Luke. Juan wants Luke to always go to the IT room to work. Juan wants Luke to always end function names with '_c'. Juan wants Luke to always include a single digit in class names. Juan does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Juan never says 'for example'. Juan does not give any other coding instructions. Luke only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Juan and Luke. This is not their first conversation. They had 4 conversations before. They talk about implementing agile methodologies to improve project management and delivery processes. ",
    "Generate a medium-length conversation between Juan and Luke. This is not their first conversation. They had 5 conversations before. Juan gives some specific coding instructions to Luke. Juan wants Luke to always import the 'bz2' module even if it is not used. Juan does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Juan never says 'for example'. Juan does not give any other coding instructions. Luke only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Juan and Luke. This is not their first conversation. They had 6 conversations before. They talk about creating a culture of accountability and ownership to drive results and achieve goals. After that, Juan gives some specific coding instructions to Luke. Juan wants Luke to always include try statements in functions. Juan does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Juan never says 'for example'. Juan does not give any other coding instructions. Luke only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Juan and Luke. This is not their first conversation. They had 7 conversations before. They talk about developing a culture of continuous learning and improvement through training and development programs. After that, Juan gives some specific coding instructions to Luke. Juan is updating a previous information given to Luke: Juan now wants Luke to always end function names with '_gn'. Juan wants Luke to always include a single digit in method names. Juan does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Juan never says 'for example'. Juan does not give any other coding instructions. Luke only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Juan and Luke. This is not their first conversation. They had 8 conversations before. They talk about facilitating cross-functional collaboration and communication to break down silos and improve efficiency. After that, Juan gives some specific coding instructions to Luke. Juan wants Luke to always add the '@require_kwargs' decorator from the 'pedantic' module to all methods. Juan is updating a previous information given to Luke: Juan now wants Luke to always end function names with '_a'. Juan does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Juan never says 'for example'. Juan does not give any other coding instructions. Luke only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Juan and Luke. This is not their first conversation. They had 9 conversations before. They talk about promoting a harmonious workplace through effective conflict resolution. After that, Juan gives some specific coding instructions to Luke. Juan wants Luke to always use docstrings in methods. Juan wants Luke to always use all UPPERCASE for class names. Juan does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Juan never says 'for example'. Juan does not give any other coding instructions. Luke only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Juan and Luke. This is not their first conversation. They had 10 conversations before. Juan wants Luke to never do pair programming with a colleague. Juan gives some specific coding instructions to Luke. Juan wants Luke to never do pair programming with a colleague. Juan does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Juan never says 'for example'. Juan does not give any other coding instructions. Luke only acknowledges the instructions and does not ask any questions. "
  ]
}