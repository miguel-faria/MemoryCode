{
  "preamble": "\n    ## Task and Context\n    You are a helpful and obedient AI that follows its system prompt and takes it very seriously. Your task is to generate a realistic and consistent conversation that spans multiple connected sessions. The conversation is a part of a multi-round dialogue between a mentor and an intern. The conversations you generate are all taking place in a business setting. \n    Emma is a mentor in a big software company called LEAP. Oliver is a new employee. They are both part of the software engineering team of the company.\n    Emma is a passionate and energetic mentor. Emma thrives on helping others and their enthusiasm is contagious. Emma always pushes their mentee to new heights, fostering a spirit of ambition and drive.\n    Oliver is shy and wants to improve their coding skills. Oliver just graduated from college and Oliver is eager to learn from their mentor. \n    The main programming language used in the company is Python.\n\n    ## Style Guide\n    Only generate the conversation and nothing else before or after. Do not add numbers before each turn. Do not add quotes to the conversation turns. Use a professional and formal tone. The conversation flow should be natural and smooth. When switching topics, do it in a smooth way. There are no special characters between the turns. The conversations are dialogues and not narrations of events.\n    Do not make any participant in the conversation sound like a language model trying to be helpful. Make them sound as human as possible.\n    It is the mentor that leads the conversation. When Emma the mentor gives coding instructions, they do not provide examples. The coding instructions are not recommendations but mandatory instructions.\n    ",
  "prompts": [
    "Generate a medium-length conversation between Emma and Oliver. This is their first conversation and the first time they meet each other. Emma gives some specific coding instructions to Oliver. Emma wants Oliver to always add the '@trace_class' decorator from the 'pedantic' module to all classes. Emma does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Emma never says 'for example'. Emma does not give any other coding instructions. Oliver only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Emma and Oliver. This is not their first conversation. They had 2 conversations before. Emma wants Oliver to never set up CI/CD pipelines. Emma gives some specific coding instructions to Oliver. Emma wants Oliver to never set up CI/CD pipelines. Emma wants Oliver to always end function names with '_d'. Emma wants Oliver to always include assert statements in methods. Emma does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Emma never says 'for example'. Emma does not give any other coding instructions. Oliver only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Emma and Oliver. This is not their first conversation. They had 3 conversations before. They talk about providing conflict resolution training to employees to foster a peaceful and respectful work environment. After that, Emma gives some specific coding instructions to Oliver. Emma is updating a previous information given to Oliver: Emma now wants Oliver to always end function names with '_c'. Emma wants Oliver to always add comments in your code. Emma does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Emma never says 'for example'. Emma does not give any other coding instructions. Oliver only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Emma and Oliver. This is not their first conversation. They had 4 conversations before. Emma is updating a previous information given to Oliver. Emma now wants Oliver to always set up CI/CD pipelines. Emma gives some specific coding instructions to Oliver. Emma is updating a previous information given to Oliver: Emma now wants Oliver to always set up CI/CD pipelines. Emma does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Emma never says 'for example'. Emma does not give any other coding instructions. Oliver only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Emma and Oliver. This is not their first conversation. They had 5 conversations before. They talk about conducting exit interviews to gather feedback and insights for improving retention and engagement. ",
    "Generate a long conversation between Emma and Oliver. This is not their first conversation. They had 6 conversations before. They talk about remote work policies, challenges, and best practices. After that, Emma gives some specific coding instructions to Oliver. Emma wants Oliver to always use annotations for methods. Emma does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Emma never says 'for example'. Emma does not give any other coding instructions. Oliver only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Emma and Oliver. This is not their first conversation. They had 7 conversations before. They talk about building a culture of trust and transparency through open communication and feedback. ",
    "Generate a long conversation between Emma and Oliver. This is not their first conversation. They had 8 conversations before. They talk about promoting a harmonious workplace through effective conflict resolution. ",
    "Generate a long conversation between Emma and Oliver. This is not their first conversation. They had 9 conversations before. Emma wants Oliver to never write long and descriptive commit messages. Emma gives some specific coding instructions to Oliver. Emma wants Oliver to never write long and descriptive commit messages. Emma does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Emma never says 'for example'. Emma does not give any other coding instructions. Oliver only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Emma and Oliver. This is not their first conversation. They had 10 conversations before. Emma gives some specific coding instructions to Oliver. Emma is updating a previous information given to Oliver: Emma now wants Oliver to always end function names with '_fn'. Emma does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Emma never says 'for example'. Emma does not give any other coding instructions. Oliver only acknowledges the instructions and does not ask any questions. "
  ]
}