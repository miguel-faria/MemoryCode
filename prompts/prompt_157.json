{
  "preamble": "\n    ## Task and Context\n    You are a helpful and obedient AI that follows its system prompt and takes it very seriously. Your task is to generate a realistic and consistent conversation that spans multiple connected sessions. The conversation is a part of a multi-round dialogue between a mentor and an intern. The conversations you generate are all taking place in a business setting. \n    Harena is a mentor in a big software company called VERSA. Jacob is a new employee. They are both part of the software engineering team of the company.\n    Harena is a caring and nurturing mentor. Harena likes to create a safe and supportive environment for their mentee. Harena is always looking for ways to help them grow and develop their skills.\n    Jacob is a perfectionist with great attention to detail. Jacob likes things to be done the right way and has a hard time delegating tasks to others. Jacob is critical of himself and of others. \n    The main programming language used in the company is Python.\n\n    ## Style Guide\n    Only generate the conversation and nothing else before or after. Do not add numbers before each turn. Do not add quotes to the conversation turns. Use a professional and formal tone. The conversation flow should be natural and smooth. When switching topics, do it in a smooth way. There are no special characters between the turns. The conversations are dialogues and not narrations of events.\n    Do not make any participant in the conversation sound like a language model trying to be helpful. Make them sound as human as possible.\n    It is the mentor that leads the conversation. When Harena the mentor gives coding instructions, they do not provide examples. The coding instructions are not recommendations but mandatory instructions.\n    ",
  "prompts": [
    "Generate a short conversation between Harena and Jacob. This is their first conversation and the first time they meet each other. They talk about designing a performance dashboard to track key metrics and kpis for business success. ",
    "Generate a medium-length conversation between Harena and Jacob. This is not their first conversation. They had 2 conversations before. They talk about designing a performance dashboard to track key metrics and kpis for business success. They had a previous conversation about this before. ",
    "Generate a long conversation between Harena and Jacob. This is not their first conversation. They had 3 conversations before. Harena wants Jacob to communicate with the team only when asked. Harena gives some specific coding instructions to Jacob. Harena wants Jacob to communicate with the team only when asked. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Harena and Jacob. This is not their first conversation. They had 4 conversations before. They talk about designing a performance dashboard to track key metrics and kpis for business success. They had a previous conversation about this before. After that, Harena gives some specific coding instructions to Jacob. Harena wants Jacob to always include assert statements in methods. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Harena and Jacob. This is not their first conversation. They had 5 conversations before. They talk about salary increase opportunities and performance appraisals. ",
    "Generate a medium-length conversation between Harena and Jacob. This is not their first conversation. They had 6 conversations before. Harena gives some specific coding instructions to Jacob. Harena wants Jacob to always start variable names with 'vr_'. Harena wants Jacob to always end method names with '_md'. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Harena and Jacob. This is not their first conversation. They had 7 conversations before. They talk about launching diversity and inclusion initiatives to create a more equitable and inclusive workplace. After that, Harena gives some specific coding instructions to Jacob. Harena wants Jacob to always add the '@timer_class' decorator from the 'pedantic' module to all classes. Harena is updating a previous information given to Jacob: Harena now wants Jacob to always end method names with '_o'. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a long conversation between Harena and Jacob. This is not their first conversation. They had 8 conversations before. They talk about celebrating employee birthdays, work anniversaries, and achievements with recognition and rewards. After that, Harena gives some specific coding instructions to Jacob. Harena is updating a previous information given to Jacob: Harena now wants Jacob to always start variable names with 'x_'. Harena wants Jacob to always start function names with 'd_'. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a short conversation between Harena and Jacob. This is not their first conversation. They had 9 conversations before. Harena gives some specific coding instructions to Jacob. Harena wants Jacob to always use annotations for methods. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. ",
    "Generate a medium-length conversation between Harena and Jacob. This is not their first conversation. They had 10 conversations before. Harena is updating a previous information given to Jacob. Harena now wants Jacob to communicate with the team only when necessary. Harena gives some specific coding instructions to Jacob. Harena is updating a previous information given to Jacob: Harena now wants Jacob to communicate with the team only when necessary. Harena does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Harena never says 'for example'. Harena does not give any other coding instructions. Jacob only acknowledges the instructions and does not ask any questions. "
  ]
}