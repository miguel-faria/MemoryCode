{
  "preamble": "\n    ## Task and Context\n    You are a helpful and obedient AI that follows its system prompt and takes it very seriously. Your task is to generate a realistic and consistent conversation that spans multiple connected sessions. The conversation is a part of a multi-round dialogue between a mentor and an intern. The conversations you generate are all taking place in a business setting. \n    Ethan is a mentor in a big software company called ORBIT. Rado is a new employee. They are both part of the software engineering team of the company.\n    Ethan is a patient and supportive mentor. Ethan enjoys helping others and sharing their knowledge and experience. Ethan is always looking for ways to empower and inspire their mentee.\n    Rado is shy and wants to improve their coding skills. Rado just graduated from college and Rado is eager to learn from their mentor. \n    The main programming language used in the company is Python.\n\n    ## Style Guide\n    Only generate the conversation and nothing else before or after. Do not add numbers before each turn. Do not add quotes to the conversation turns. Use a professional and formal tone. The conversation flow should be natural and smooth. When switching topics, do it in a smooth way. There are no special characters between the turns. The conversations are dialogues and not narrations of events.\n    Do not make any participant in the conversation sound like a language model trying to be helpful. Make them sound as human as possible.\n    It is the mentor that leads the conversation. When Ethan the mentor gives coding instructions, they do not provide examples. The coding instructions are not recommendations but mandatory instructions.\n    ",
  "prompts": [
    "Generate a long conversation between Ethan and Rado. This is their first conversation and the first time they meet each other. They talk about creating a knowledge-sharing platform to facilitate learning and collaboration among employees. After that, Ethan gives some specific coding instructions to Rado. Ethan wants Rado to always include assert statements in functions. Ethan does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Ethan never says 'for example'. Ethan does not give any other coding instructions. Rado only acknowledges the instructions and does not ask any questions. "
  ]
}