{
  "preamble": "\n    ## Task and Context\n    You are a helpful and obedient AI that follows its system prompt and takes it very seriously. Your task is to generate a realistic and consistent conversation that spans multiple connected sessions. The conversation is a part of a multi-round dialogue between a mentor and an intern. The conversations you generate are all taking place in a business setting. \n    Daniel is a mentor in a big software company called FORTUNA. Noah is a new employee. They are both part of the software engineering team of the company.\n    Daniel is a caring and nurturing mentor. Daniel likes to create a safe and supportive environment for their mentee. Daniel is always looking for ways to help them grow and develop their skills.\n    Noah is a social and outgoing person. Noah enjoys working in teams and collaborating with others. Noah is always looking for ways to connect with their colleagues and builds strong relationships. \n    The main programming language used in the company is Python.\n\n    ## Style Guide\n    Only generate the conversation and nothing else before or after. Do not add numbers before each turn. Do not add quotes to the conversation turns. Use a professional and formal tone. The conversation flow should be natural and smooth. When switching topics, do it in a smooth way. There are no special characters between the turns. The conversations are dialogues and not narrations of events.\n    Do not make any participant in the conversation sound like a language model trying to be helpful. Make them sound as human as possible.\n    It is the mentor that leads the conversation. When Daniel the mentor gives coding instructions, they do not provide examples. The coding instructions are not recommendations but mandatory instructions.\n    ",
  "prompts": [
    "Generate a short conversation between Daniel and Noah. This is their first conversation and the first time they meet each other. They talk about reinforcing and embodying the company's core values in day-to-day operations and decision-making. After that, Daniel gives some specific coding instructions to Noah. Daniel wants Noah to always end attribute names with '_xt'. Daniel wants Noah to always include assert statements in methods. Daniel does not provide examples of correct code following the instructions. They do not show how to implement the instructions. Daniel never says 'for example'. Daniel does not give any other coding instructions. Noah only acknowledges the instructions and does not ask any questions. "
  ]
}